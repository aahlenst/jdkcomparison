name: Build and test

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        # Node.js versions and release schedule: https://nodejs.org/en/about/releases/
        node-version: [ 14.x, 18.x, 19.x ]

    steps:
      - uses: actions/checkout@v3

      - name: Run shellcheck on shell scripts
        run: find . -name node_modules -prune -o -type f -name "*.sh" -exec shellcheck {} \;

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Run tests
        run: npm run test

      # Starts the Next.js development server and puts it into the background before running the tests and stopping the
      # development server by looking for the PID of the process that listens on port 3000. Capturing the PID with $! is
      # not possible because `next` seems to spawn a separate process, even if invoked directly. xargs handles 0..n
      # matching processes correctly.
      - name: Run E2E tests
        run: |
          npm run dev > /tmp/nextjs-dev.txt 2>&1 &
          npm run e2e:headless
          lsof -t -i:3000 | xargs -r kill -TERM

      # Build the site separately. Running the Next.js development server makes a previous production build unusable.
      - name: Build
        run: npx next build

      # Starts the Next.js server and puts it into the background before running the acceptance tests and stopping the
      # production server by looking for the PID of the process that listens on port 3000. Capturing the PID with $! is
      # not possible because `next` seems to spawn a separate process, even if invoked directly. xargs handles 0..n
      # matching processes correctly.
      - name: Run acceptance tests
        run: |
          npm run start > /tmp/nextjs-prod.txt 2>&1 &
          npm run acceptance
          lsof -t -i:3000 | xargs -r kill -TERM
